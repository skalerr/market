@model Market.Domain.ViewModels.Order.OrderViewModel

@{
    ViewData["Title"] = "Home Page";
    var providers = ViewBag.Providers as List<Provider>;
}

@using (Html.BeginForm("CreateOrder", "Home", FormMethod.Post, new {@class = "form-horizontal", role = "form"}))
{
   
  <div class="form-group">
    @Html.LabelFor(model => model.Number, new { @class = "control-label col-md-3" })
    <div class="col-md-9">
      <div class="row">
        <div class="col-md-7">
          @Html.TextBoxFor(model => model.Number, new { @class = "form-control", autocomplete = "off" })
        </div>
        <div class="col-md-5">
          @Html.ValidationMessageFor(model => model.Number, null, new { @class = "error-message" })
        </div>
      </div>
    </div>
  </div>
  
  <div class="form-group">
    @Html.LabelFor(model => model.Date, new { @class = "control-label col-md-3" })
    <div class="col-md-9">
      <div class="row">
        <div class="col-md-7">
          @* <input type="date" name="Date" class="form-control" id=""> *@
            @Html.TextBoxFor(model => model.Date, new { @class = "form-control", autocomplete = "off" })
        </div>
        <div class="col-md-5">
          @Html.ValidationMessageFor(model => model.Date, null, new { @class = "error-message" })
        </div>
      </div>
    </div>
  </div>
  
  <div class="form-group">
    @Html.LabelFor(model => model.ProviderId, new { @class = "control-label col-md-3" })
    <div class="col-md-9">
      <div class="row">
        <div class="col-md-7">
          @Html.DropDownListFor(
            model => model.ProviderId, 
            new SelectList(providers, "Id", "Name"), 
            new { @class = "form-select", autocomplete = "off" })
          
        </div>
        <div class="col-md-5">
          @Html.ValidationMessageFor(model => model.ProviderId, null, new { @class = "error-message" })
        </div>
      </div>
    </div>
  </div>
  
  <button type="submit" class="my-5 btn btn-success">Отправить</button>
}
